export const ANALYSIS_MOCK = {
    'clientToolName': 'mythxjs-api-curl',
    'data':
    {
        'contractName': 'UsesExample',
        'bytecode': '60806040526040518060400160405280600b81526020017f557365734578616d706c650000000000000000000000000000000000000000008152506000908051906020019061004f9291906100d4565b5034801561005c57600080fd5b506040516020806103808339810180604052602081101561007c57600080fd5b810190808051906020019092919050505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610179565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011557805160ff1916838001178555610143565b82800160010185558215610143579182015b82811115610142578251825591602001919060010190610127565b5b5090506101509190610154565b5090565b61017691905b8082111561017257600081600090555060010161015a565b5090565b90565b6101f8806101886000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063852958771461003b578063af640d0f14610085575b600080fd5b610043610108565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61008d61012e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100cd5780820151818401526020810190506100b2565b50505050905090810190601f1680156100fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101c45780601f10610199576101008083540402835291602001916101c4565b820191906000526020600020905b8154815290600101906020018083116101a757829003601f168201915b50505050508156fea165627a7a723058201d03acbedb47e67190be7805476a9573db831184464773ecbe2ab76dd92ef1a00029',
        'analysisMode': 'quick',
        'sourceList': [
            'UsesExample.sol'
        ],
        'sources': {
            'UsesExample.sol': {
                'source': 'pragma solidity ^0.5.0;\r\n\r\n\r\ncontract UsesExample {\r\n  string public id = \'UsesExample\';\r\n  address public other;\r\n  constructor(address _other) public {\r\n    other = _other;\r\n  }\r\n}\r\n'
            }
        },
        'mainSource': 'UsesExample.sol'
    }
}


export const ANALYSIS_MOCK_VULNERABLE = {
    'data': { 'contractName': 'Vulnerable', 'bytecode': '608060405260f960005534801561001557600080fd5b5060a7806100246000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80630dbe671f14604157806326121ff01460495780632e52d60614604f575b600080fd5b60476067565b005b60476072565b60556075565b60408051918252519081900360200190f35b600080546002029055565b33ff5b6000548156fea165627a7a72305820354a0ccc1504fa2943f1b286225b3cb12c4078eb2d9bc1b757cc8fddf700bf570029', 'sourceMap': '26:172:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;150:46;;;:::i;:::-;;83:61;;;:::i;52:24::-;;;:::i;:::-;;;;;;;;;;;;;;;;150:46;184:1;;;188;184:5;180:9;;150:46::o;83:61::-;126:10;113:24;52;;;;:::o', 'deployedBytecode': '6080604052348015600f57600080fd5b5060043610603c5760003560e01c80630dbe671f14604157806326121ff01460495780632e52d60614604f575b600080fd5b60476067565b005b60476072565b60556075565b60408051918252519081900360200190f35b600080546002029055565b33ff5b6000548156fea165627a7a72305820354a0ccc1504fa2943f1b286225b3cb12c4078eb2d9bc1b757cc8fddf700bf570029', 'deployedSourceMap': '26:172:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;150:46;;;:::i;:::-;;83:61;;;:::i;52:24::-;;;:::i;:::-;;;;;;;;;;;;;;;;150:46;184:1;;;188;184:5;180:9;;150:46::o;83:61::-;126:10;113:24;52;;;;:::o', 'sourceList': ['vulnerable.sol'], 'analysisMode': 'quick', 'sources': { 'vulnerable.sol': { 'source': '\npragma solidity ^0.5.5;\n\ncontract Vulnerable {\n    uint256 public n = 2^251;\n\n    function f() public {\n        selfdestruct(msg.sender);\n    }\n\n    function a() public {\n        n = n * 2;\n    }\n}' } }, 'mainSource': 'vulnerable.sol' }
}

export const ANALYSIS_MOCK_TOKEN =
    { 'data': { 'contractName': 'Token', 'bytecode': '608060405234801561001057600080fd5b5060405160208061019c8339810180604052602081101561003057600080fd5b5051600181905533600090815260208190526040902055610146806100566000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806318160ddd1461004657806370a0823114610060578063a9059cbb14610086575b600080fd5b61004e6100c6565b60408051918252519081900360200190f35b61004e6004803603602081101561007657600080fd5b50356001600160a01b03166100cc565b6100b26004803603604081101561009c57600080fd5b506001600160a01b0381351690602001356100e7565b604080519115158252519081900360200190f35b60015481565b6001600160a01b031660009081526020819052604090205490565b33600090815260208190526040808220805484900390556001600160a01b0384168252902080548201905560019291505056fea165627a7a72305820812708d93099d7ca1cc78a250793999174dcea2913f0567544733ddbb149807d0029', 'sourceMap': '2:454:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2:454:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59:23;;;:::i;:::-;;;;;;;;;;;;;;;;350:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;350:104:0;-1:-1:-1;;;;;350:104:0;;:::i;193:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;193:153:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;59:23;;;;:::o;350:104::-;-1:-1:-1;;;;;433:16:0;406:12;433:16;;;;;;;;;;;;350:104::o;193:153::-;274:10;253:4;265:20;;;;;;;;;;;:30;;;;;;;-1:-1:-1;;;;;301:13:0;;;;;;:23;;;;;;-1:-1:-1;193:153:0;;;;:::o', 'deployedBytecode': '608060405234801561001057600080fd5b50600436106100415760003560e01c806318160ddd1461004657806370a0823114610060578063a9059cbb14610086575b600080fd5b61004e6100c6565b60408051918252519081900360200190f35b61004e6004803603602081101561007657600080fd5b50356001600160a01b03166100cc565b6100b26004803603604081101561009c57600080fd5b506001600160a01b0381351690602001356100e7565b604080519115158252519081900360200190f35b60015481565b6001600160a01b031660009081526020819052604090205490565b33600090815260208190526040808220805484900390556001600160a01b0384168252902080548201905560019291505056fea165627a7a72305820812708d93099d7ca1cc78a250793999174dcea2913f0567544733ddbb149807d0029', 'deployedSourceMap': '2:454:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2:454:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59:23;;;:::i;:::-;;;;;;;;;;;;;;;;350:104;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;350:104:0;-1:-1:-1;;;;;350:104:0;;:::i;193:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;193:153:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;59:23;;;;:::o;350:104::-;-1:-1:-1;;;;;433:16:0;406:12;433:16;;;;;;;;;;;;350:104::o;193:153::-;274:10;253:4;265:20;;;;;;;;;;;:30;;;;;;;-1:-1:-1;;;;;301:13:0;;;;;;:23;;;;;;-1:-1:-1;193:153:0;;;;:::o', 'sourceList': ['token.sol'], 'analysisMode': 'quick', 'sources': { 'token.sol': { 'source': '\n\ncontract Token {\n\n  mapping(address => uint) balances;\n  uint public totalSupply;\n\n  constructor(uint _initialSupply) public {\n    balances[msg.sender] = totalSupply = _initialSupply;\n  }\n\n  function transfer(address _to, uint _value) public returns (bool) {\n    balances[msg.sender] -= _value;\n    balances[_to] += _value;\n    return true;\n  }\n\n  function balanceOf(address _owner) public view returns (uint balance) {\n    return balances[_owner];\n  }\n}\n' } }, 'mainSource': 'token.sol' } }
