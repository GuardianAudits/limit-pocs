import { AnalysisGroups, AnalyzeOptions, Group, JwtTokensInterface } from '..';
import { AnalysisList, AnalysisSubmission, DetectedIssues } from '../types';
export declare class AnalysesService {
    private API_URL;
    private toolName;
    constructor(jwtTokens: JwtTokensInterface, toolName?: string);
    getAnalysesList(): Promise<AnalysisList>;
    getAnalysisStatus(uuid: string): Promise<AnalysisSubmission>;
    getDetectedIssues(uuid: string): Promise<DetectedIssues>;
    submitBytecode(bytecode: string): Promise<AnalysisSubmission>;
    submitSourceCode(sourceCode: string, contractName: string, propertyChecking?: boolean): Promise<AnalysisSubmission>;
    analyze(options: AnalyzeOptions, propertyChecking?: boolean): Promise<AnalysisSubmission>;
    getPdf(uuid: string): Promise<any>;
    listGroups(queryString?: any): Promise<AnalysisGroups>;
    getGroupById(groupId: string): Promise<Group>;
    createGroup(groupName?: string): Promise<Group>;
    groupOperation(groupId: string, operationType?: string): Promise<Group>;
    private setCredentials;
}
