/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ILimitPoolManager,
  ILimitPoolManagerInterface,
} from "../ILimitPoolManager";

const _abi = [
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int16",
        name: "tickSpacing",
        type: "int16",
      },
    ],
    name: "tickSpacings",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ILimitPoolManager__factory {
  static readonly abi = _abi;
  static createInterface(): ILimitPoolManagerInterface {
    return new utils.Interface(_abi) as ILimitPoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILimitPoolManager {
    return new Contract(address, _abi, signerOrProvider) as ILimitPoolManager;
  }
}
